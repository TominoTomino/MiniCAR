/**
  ******************************************************************************
  * @文件说明：本文件程序为广场智能沙盘PID差速循迹车程序
  * @编写人：Zyd
  * @版本：V1.1.0
  * @日期：2022-06-10 
  ******************************************************************************/
 

通信协议：
通信协议逻辑：无线串口通信逻辑，收到上位机功能指令则回传上位机功能指令

协议格式：默认前缀：0x00,0x01,0x17 功能指令：0xfe;示例：0x00,0x01,0x17,0xfe
规则：设备开关0xa- 前进行驶0xf-  倒车行驶0xb-  出库0x1-  入库0x2-  避障0x3-  转弯0x4-  数据采集0xc-

基础协议部分
1、设备启动:0xaa 、 设备关闭：0xab (默认关闭电机，需要设备启动指令或者归为后起始点的指令打开电机)
2、前进行驶：0xf1
3、运动停止：0xf0

小车参数校准部分(进入参数校准设备进入关闭状态进行)
1、进入参数采集模式：0xc1
2、参数采集模式下，0xc3：采集白色色块数据，0xc4：采集道路数据，0xc5：传感器基准计算，0xc6：传感器基准查询
3、传感器基准检查模式：0xc2
4、0xc7：传感器原始数据采集，0xc8：串口打印行车信息

充电站场景--进出充电站部分
1、前进出充电站：0xf2 --进入前进模式
2、倒车进充电站：0xb2 --进入倒车模式
3、充电站内停止：0xab

泊车场景--遥控泊车部分
1、前进行驶：0xf1   --进入前进模式
2、泊车出库：0x12
2、泊车入库：0x22   --进入倒车模式
3、运动停止：0xf0

泊车场景--倒车循迹车部分
1、倒车出库：0x13   --进入倒车模式
2、前进行驶：0xf1   --进入前进模式
3、前进窄路避障：0x31
4、倒车窄路避障：0x32 --进入倒车模式
5、转弯1：0x41
6、转弯2：0x42
7、倒车入库：0x22  --进入倒车模式
8、运动停止：0xf0

泊车场景--记忆泊车部分
1、倒车出库：0x14   --进入倒车模式
2、运动停止：0xf0
//3、前进行驶：0xf1    --进入前进模式
4、绕行避障1：0x33
5、绕行转弯（进入二层车库）：0x43
6、入库停车：0x23
7、出库复位：0x15
8、出库复位转弯：0x44
9、出库复位停车：0x22

泊车场景--一键讲解
1、二层车库到窄路避障：0x34  --进入前进模式

高速场景--NDA智能领航辅助系统
1、NDA智能领航辅助系统：0xf3  --进入前进模式
2、高速场景倒车入库：0x22 --进入倒车模式

参数说明：
1、Flag_Stop：电机打开和关闭；
2、Auto_Back_Flag：0：前进模式，1：倒车模式；
3、Flag_Turn：
            0：前进直线，
            1：遥控泊车出库，2:遥控泊车入库，
            3：倒车循迹倒车出库，4：倒车循迹前进窄路避障， 5：倒车循迹倒车窄路避障， 6：倒车循迹前进转弯1， 7：倒车循迹前进转弯2， 8：倒车循迹倒车入库，
            9：记忆泊车倒车出库，10：记忆泊车绕行避障1，11：记忆泊车绕行转弯，12：记忆泊车倒车入库停车，13：记忆泊车出库复位
            14：一键讲解二层车库到窄路避障 ，15：出充电站 ， 16：进充电站 ， 17：高速场景


需要配置的文件参数有:
1、sys.h文件：
	//此两项默认配置，没有特殊情况不修改
	#define ADC_IS_DMA   1   //传感数据采用DMA传输时设置为1，同步将ADC_NO_DMA设置为0
	#define ADC_NO_DMA   0   //传感数据不采用DMA传输时设置为1，同步将ADC_IS_DMA设置为0

	//此项为下载时修改对应小车编号，每台小车一一对应调教
	#define CAR_NUM  2   //小车编号，下载程序时更改设置不同小车编号，每台车都有对应调校(1,2,3,4)



代码为PID差速循迹车程序
程序优势：
①可以一键配置时小车适应各种循迹场地，适用1-4cm循迹线宽，适合浅色循迹背景，只要偏白即可
②PID循迹可以使小车循迹更快更稳定
③可以根据PID控制器使小车恒速循迹
④可以根据PID控制器使小车根据目标距离循迹

STM32F103C8T6有四个定时器，每个定时器起到的作用如下：
TIMER1:定时时间5ms读取编码器数据
TIMER2:将定时器2配置成编码器模式，读取左轮电机编码器数据。
TIMER3:将定时器2配置成编码器模式，读取右轮电机编码器数据。
TIMER4:产生PWM波控制电机速度，产生pwm波形频率为14.4KHZ，占空比可调范围为0-5000。
		
			
函数说明：
track.c：为PID红外循迹模块函数
datastore.c:储存关于PID循迹循迹模块根据循迹赛道配置参数			
PID.C:此文件为关于PID相关函数文件,在文件中配置PID参数
control.c:此文件为关于PID循迹车控制差速车移动函数
OLED12864.c;此文件为关于OLED屏驱动文件			
common.c:公用函数文件，在头文件中配置小车的参数
encoder.c:编码器文件，在头文件中配置关于编码器的参数
key.c：按键文件，其中为和按键相关的函数文件
motor.c:其中包换与电机相关函数文件			
24l01:此文件为关于2.4G无线模块NRF24L01相关文件			
timer.c:此文件为关于STM32F103C8T6四个定时器相关函数文件			
beep.c：此文件为关于蜂鸣器相关文件			
led.c：此文件为关于LED指示灯相关文件			
stmflash:此文件为关于关于STM32F103C8T6内部flash使用相关文件			
servor:此函数为关于舵机驱动文件，在本差速PID循迹车中未使用舵机因此未使用			
			
			